// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.1-0.20240823215434-d232e9efa9f5 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+xaX28buRH/KgO2QO6KjeQm7UP11MROUgO5axA7QYFLgKO4I4kJl9yQXNmKoe9eDLm7",
	"2j+ULF/r4JLLmyxy/v9mODPyDROmKI1G7R2b3bCSW16gRxv+esWXUnMvjb4oUdA3OTphZUlfsRm7XCGU",
	"7R0QRi/ksrLxr4Wx4FcInyq0m8k7DfAXePCKL/FCfsYH4EoUciHRhUu6KuZowSzAoquUd2DRV1ZjXhOe",
	"VtYZ+wDk7gTmGygtrqWpHAiulAOu8w7jqxX3pB+CNzXVO80yJkn3oBbLmOYFshkr+6ZmzIkVFjz4xJoS",
	"rZcYfBIVoU9+UxKl81bqJdtmrDGucyi1xyVatt1mzVdm/gGFZ1v6yqIrjXaR81Oev+Aer/iG/hJGe9Se",
	"PvKyVFIE5aYfHHn+pqPeny0u2Iz9abqL5DSeuukza42NosaRc2jXaAG1MJX2aDEHrgGJhEKpUXipl+Q7",
	"ilDOPYc5Fx9R52TsU56/xk8VOn//2j7lOdgoLANXiRVwBwtrCpB6zZXMwVgopHOkbwfC24ydk2Waq4tg",
	"bJRw7/o2QiFKhfpixl5KgdrhS3lHr0mPhbtNnZe45IrtgMat5ZuUek9ASecp2daV0mj5XCpJ+AbunBGS",
	"e8zhSvpVCHzJxUfKIWOBWy8XnMBLYA9f/8yLezKnI+BuRjUKU2a71g5pIccSdY7aQ0B8wMeryqo769+v",
	"CLsqea4X5nazercHKhznmcqm4kzl5FMlLeZs9stQq46Y98lStNeblVXBU287WNncT8h7Ir4QkrdNqQ/a",
	"tQWiH+Kf0Dm+xETVH3i9uTj2ccZifo54c++tnFfRouEL+2R3CB6vg6lkiqsi22z8CgmjFAofzehze/Hm",
	"ySm05+0LnRtRFRTFBLccheIW87pypXsAFQ8Br0uLzpGy3EFDegRbl7C8DW3DPXrSwcJUOgepo+41o4QO",
	"9NIfVTdr00Z4y1gunTBr/I32t8TUqTjBddITQxH/gy92Au/FGx8q5+WizvGxls+uveXQu9RCTBDeW9KE",
	"G4yVS5lgelZjMz73VyspKJelA+49Oh+lSAdLpPSndKeLKQleFnghuNaUqaMoygLJvxQl+EFqeP38FB4/",
	"fvwPsqDg/keWsfiJzVjOPT4kdmMx21Te76DTz3ypldQJSD2vlGojGLJeLkAbDybG+eLV2X8CIqh9rZTi",
	"c4Vs5m2FCbPp3lu0LhmymlOUFDC2rq8ewTl2zkOW9F43VarmnIHflJI69M1Of0kPMfXp9jgvdtuBkSfP",
	"mpf9lB72VP+dsYby9pd1UNMDYTaU8T6p47AT6Pvm1GjPpY4jjwiDRD2aWIlrhMLYMFChm8B5cKFF4BZB",
	"m3CWAfyM1z6OIHAllYI5gpZqEuaavk92N5PDyqXxXO11VzIC5JwUK8qqn9BzGhHGsem9R+PyN39j5Z6T",
	"DmwP1IvRkQtJbvfxrY8PMR+Uit+a+P12ZuSYouOyQ6DsuXebsbqNSWq+Hoo8ut06Q88ldXoD9DfShryz",
	"nf7vb7O94T1yQSS7zY7zs4NvYu9up664CVyu0CFQTZ8jnL59Budnjto/Q6kFdW13UDnMKRFr2s2wm4zp",
	"1T6fY7wcasRHpqT7bxkqBhXdjJkSNS8lm7HHk5PJCaU296sge8o1Vxsn3bSZZkTtyyWGTCb3xhKUk5fo",
	"9mc8697NelueX9IY2V2ZDrZA2yzVAjljPRibxyVOp9t29QJnEQZ4LTYP4CFcds53/flKLlfofGcZ1E5s",
	"DRcnjEXBbb6fizJXxOTfJeqLi+fQUsRPexdAZADrRi6+ersJBnVVUDxbQ8KSqGbeCWpbEd4P9juPTk72",
	"ZWR7bzocq7cZ+9sxdJ11zDZjfz+GJLUaCbSPjhLX7KrCBFUVBbcbNmPnTQpRKArjPMiiNNZz7aGHWCKb",
	"rpArv/q8F77/CuenKxQfWdqbRw+gw+gkljY5UdcLyXo5Jh1EHYd2Rs1AkGodgmjW+mTaDJjTm1wu0fnt",
	"cfn6Av2TmvIMy0SuDrrjwDurFRBG51ByWzfLjQqdkthMCrHwwbvq5OSx4GpprPSrYhZVDd9ikyZUeXZZ",
	"Em8czJP/Txo0y4qvDf8vsI/zMAHxZiktoHbgfpiozhR4G0TaifGPCpPuPvVrREoT7DujhJqKoyDyNlz8",
	"o+JjvLP8GlEy3G0eBkvdEU1vysqqbQcjg+duATxEWXIVlrwZlB+Xs4Ux0zkPD1/JHfXFUgdgaJAerkyl",
	"clhInQNXkcxBcte6lGvUNd/mF5sO/3/+dXKShZ/rul8+mpzEVnsE57otehWW0beg+c3rlw9RC5NjDjUd",
	"vHn9En4gbX5MA5KOvr9qB1G4C7hFFYJd/zK4C/UeDO5rfW4B5D4MSqV2EOxgr0GjrhEa18OdpzgMJsbh",
	"BJ4bC3jNi1JhBrKZVzqiD+TCvjQYZkGXxR1zAC5X0gHqvDRSe4gmB/tbmaMew4dRN6hyOIeO6Su/p9AX",
	"bwwTbt6TTYkO8Z4zqW1TvqUM6vVe3eypV6/wq9RCVXlvefIrLBRfkj0OfSiABPLWmVw5AzXZwGv9WnQ4",
	"RY/t679ImmbjzVvwgT/S0uDO4CU6giZVosNGHJofjAKGKLLSu37egNTOI88HPzIE4R8q51vyyd5dTyKw",
	"vf/4yXHBK+XZbMGV2/30MTdGIdffh5VQuY4vWMNh5Z6r1bBd/paKVmoUuI/alfThXUrYUXPn76V+HWPt",
	"UWVsT3juUM0Sqvyui9q3PGEnK9x2+98AAAD//2VVqjY0KwAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
