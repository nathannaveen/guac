// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen/v2 version v2.1.0 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"fG42fwYAAP//YNyA7gcXAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
